# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

OPTIONS     /api/search                                                 controllers.Cors.cors()
OPTIONS     /api/search/occurrences                                     controllers.Cors.cors()
OPTIONS     /api/occurrence                                             controllers.Cors.cors()
OPTIONS     /api/datapublisher                                          controllers.Cors.cors()
OPTIONS     /api/datapublisher/:datapublisherId                         controllers.Cors.cors1(datapublisherId:String)
OPTIONS     /api/dataset                                                controllers.Cors.cors()
OPTIONS     /api/dataset/:datasetId                                     controllers.Cors.cors1(datasetId:String)
OPTIONS     /api/occurrence/:occurrenceId                               controllers.Cors.cors1(occurrenceId:String)
OPTIONS     /api/search/occurrences/markers/:nwLat/:nwLng/:seLat/:seLng controllers.Cors.cors4(nwLat: String, nwLng: String, seLat: String, seLng: String)
OPTIONS     /api/search/occurrences/tile/:nwLat/:nwLng/:seLat/:seLng    controllers.Cors.cors4(nwLat: String, nwLng: String, seLat: String, seLng: String)

POST        /api/search/occurrences                                     controllers.Search.searchOccurrences()
POST        /api/search/occurrences/markers/:nwLat/:nwLng/:seLat/:seLng controllers.Search.searchOccurrencesMarkers(nwLat: Double, nwLng: Double, seLat: Double, seLng: Double)
POST        /api/search/occurrences/tile/:nwLat/:nwLng/:seLat/:seLng    controllers.Search.searchOccurrencesTile(nwLat: Double, nwLng: Double, seLat: Double, seLng: Double)
GET         /api/occurrence/:occurrenceId                               controllers.Occurrences.get(occurrenceId:String)
GET         /api/datapublisher                                          controllers.DataPublishers.searchAll()
GET         /api/datapublisher/:datapublisherId                         controllers.DataPublishers.get(datapublisherId:String)
GET         /api/dataset/:datasetId                                     controllers.Datasets.get(datasetId:String)
GET         /api/dataset                                                controllers.Datasets.getAll()
#GET        /api/occurrence                                             controllers.Occurrences.searchAll()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
